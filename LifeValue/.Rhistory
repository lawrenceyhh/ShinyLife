})
output$bestcomp <- renderText({
paste("Best Company in Current Industry: ", "<font color=\"blue\"><b>", bestcomp(), "</b></font>")
})
output$bestsal <- renderText({
paste("Salary in month: ", "<font color=\"blue\"><b>", bestsal(), "</b></font>")
})
output$bcom <- renderInfoBox({
infoBox(title = "Recommend Company",
value = bestcomp(),
subtitle = "The company that suits you the most",
fill = T, color = "blue", icon("building"))
})
output$bsal <- renderInfoBox({
infoBox(title = "Salary",
value = bestsal(),
subtitle = "Highest possible salary (/month)",
fill = T, color = "green", icon("dollar-sign"))
})
###The 3rd Tab
#3-1 Input & BarChart & TotalSalary
observeEvent(
input$aIndustry,
updateSelectizeInput(session, "Industry", "",
selected = input$aIndustry)
)
observeEvent(
input$aCompany,
updateSelectizeInput(session, "Company", "",
selected = input$aCompany)
)
observeEvent(
input$Industry,
updateSelectizeInput(session, "Company",  "",
choices = se$Company [se$Industry == input$Industry])
)
observeEvent(
input$Industry2,
updateSelectizeInput(session, "Company2",  "",
choices = se$Company [se$Industry == input$Industry2
& se$Company != input$Company])
)
observeEvent(
input$Industry3,
updateSelectizeInput(session, "Company3",  "",
choices = se$Company [se$Industry == input$Industry3
& se$Company != input$Company
& se$Company != input$Company2])
)
P1 <- reactive({
req(input$Industry, input$Company, input$Education, input$Year, input$Hour, input$Fatigue,
input$Recommend, input$GrowthHelp, input$CVHelp)
base <- se %>% lm(SalaryY ~ Industry + Company + Education + Year + Hour + Fatigue + Recommend
+ GrowthHelp + CVHelp, .)
i <- data.frame(Industry = input$Industry, Company = input$Company, Education = input$Education,
Year = input$Year, Hour = input$Hour, Fatigue = as.factor(input$Fatigue),
Recommend = as.factor(input$Recommend), GrowthHelp = as.factor(input$GrowthHelp),
CVHelp = as.factor(input$CVHelp))
pred <- predict(base, i)
})
P12 <- reactive({
req(input$Industry2, input$Company2, input$Education, input$Year, input$Hour, input$Fatigue,
input$Recommend, input$GrowthHelp, input$CVHelp)
base <- se %>% lm(SalaryY ~ Industry + Company + Education + Year + Hour + Fatigue + Recommend
+ GrowthHelp + CVHelp, .)
i <- data.frame(Industry = input$Industry2, Company = input$Company2, Education = input$Education,
Year = input$Year, Hour = input$Hour, Fatigue = as.factor(input$Fatigue),
Recommend = as.factor(input$Recommend), GrowthHelp = as.factor(input$GrowthHelp),
CVHelp = as.factor(input$CVHelp))
pred <- predict(base, i)
})
P13 <- reactive({
req(input$Industry3, input$Company3, input$Education, input$Year, input$Hour, input$Fatigue,
input$Recommend, input$GrowthHelp, input$CVHelp)
base <- se %>% lm(SalaryY ~ Industry + Company + Education + Year + Hour + Fatigue + Recommend
+ GrowthHelp + CVHelp, .)
i <- data.frame(Industry = input$Industry3, Company = input$Company3, Education = input$Education,
Year = input$Year, Hour = input$Hour, Fatigue = as.factor(input$Fatigue),
Recommend = as.factor(input$Recommend), GrowthHelp = as.factor(input$GrowthHelp),
CVHelp = as.factor(input$CVHelp))
pred <- predict(base, i)
})
G <- reactive({
req(input$Industry, input$Company, input$Education, input$Hour, input$Fatigue)
sb <- se %>% lm(GrowthRate ~ Industry + Company + Hour + Fatigue + Education, .)
sd <- data.frame(Industry = input$Industry, Company = input$Company, Education = input$Education,
Hour = input$Hour, Fatigue = as.factor(input$Fatigue))
predG <- predict(sb, sd)
})
G2 <- reactive({
req(input$Industry2, input$Company2, input$Education, input$Hour, input$Fatigue)
sb <- se %>% lm(GrowthRate ~ Industry + Company + Hour + Fatigue + Education, .)
sd <- data.frame(Industry = input$Industry2, Company = input$Company2, Education = input$Education,
Hour = input$Hour, Fatigue = as.factor(input$Fatigue))
predG <- predict(sb, sd)
})
G3 <- reactive({
req(input$Industry3, input$Company3, input$Education, input$Hour, input$Fatigue)
sb <- se %>% lm(GrowthRate ~ Industry + Company + Hour + Fatigue + Education, .)
sd <- data.frame(Industry = input$Industry3, Company = input$Company3, Education = input$Education,
Hour = input$Hour, Fatigue = as.factor(input$Fatigue))
predG <- predict(sb, sd)
})
Sum <- reactive({
req(input$WorkYear)
g <- G()
i <- 2.73
r <- (1+g/100)/(1+i/100)
Pt <- Gamma()*P1()*(1-r^(input$WorkYear))/(1-r)*10000
Pt <- Pt %>% ceiling()
})
Sum2 <- reactive({
req(input$WorkYear)
g <- G2()
i <- 2.73
r <- (1+g/100)/(1+i/100)
Pt <- Gamma()*P12()*(1-r^(input$WorkYear))/(1-r)*10000
Pt <- Pt %>% ceiling()
})
Sum3 <- reactive({
req(input$WorkYear)
g <- G3()
i <- 2.73
r <- (1+g/100)/(1+i/100)
Pt <- Gamma()*P13()*(1-r^(input$WorkYear))/(1-r)*10000
Pt <- Pt %>% ceiling()
})
output$Compare <- renderPlot({
req(Sum(), Sum2(), Sum3())
com <- c(Sum()/10000, Sum2()/10000, Sum3()/10000)
name <- c(input$Company, input$Company2, input$Company3)
barplot(com, main = "Comparison", names.arg = name, col=c("royalblue", "springgreen3", "orange"))
})
output$TotalSalary <- renderText({
Sum <- Sum() %>% format(., big.mark=",", scientific=FALSE)
paste("First Company:", "<font color=\"#0066ff\"><b>", Sum,"($ NTD)", "</b></font>")
})
output$TotalSalary2 <- renderText({
Sum2 <- Sum2() %>% format(., big.mark=",", scientific=FALSE)
paste("Second Company:", "<font color=\"#009933\"><b>", Sum2,"($ NTD)", "</b></font>")
})
output$TotalSalary3 <- renderText({
Sum3 <- Sum3() %>% format(., big.mark=",", scientific=FALSE)
paste("Third Company:", "<font color=\"#ff3300\"><b>", Sum3, "($ NTD)", "</b></font>")
})
LifeIndex1 <- reactive({
req(input$Company, input$WorkYear)
est <- (Sum() / (input$WorkYear*10000))
highersubset <- subset(se$SalaryY, se$SalaryY>est)
PR <- (1 - (length(highersubset) / length(se$SalaryY)))*100
PR <- round(PR,1)
})
LifeIndex2 <- reactive({
req(input$Company2, input$WorkYear)
est <- (Sum2() / (input$WorkYear*10000))
highersubset <- subset(se$SalaryY, se$SalaryY>est)
PR <- (1 - (length(highersubset) / length(se$SalaryY)))*100
PR <- round(PR,1)
})
LifeIndex3 <- reactive({
req(input$Company3, input$WorkYear)
est <- (Sum3() / (input$WorkYear*10000))
highersubset <- subset(se$SalaryY, se$SalaryY>est)
PR <- (1 - (length(highersubset) / length(se$SalaryY)))*100
PR <- round(PR,1)
})
output$TS1 <- renderValueBox({
valueBox(paste(Sum(),"($ NTD)"), "Salary 1",
color = "blue", icon("money"))
})
output$LI1 <- renderValueBox({
valueBox(paste(LifeIndex1(),"%"), "Life Index 1",
color = "light-blue", icon("chart-line"))
})
output$TS2 <- renderValueBox({
valueBox(paste(Sum2(),"($ NTD)"), "Salary 2",
color = "green", icon("money"))
})
output$LI2 <- renderValueBox({
valueBox(paste(LifeIndex2(),"%"), "Life Index 2",
color = "olive", icon("chart-line"))
})
output$TS3 <- renderValueBox({
valueBox(paste(Sum3(),"($ NTD)"), "Salary 3",
color = "orange", icon("money"))
})
output$LI3 <- renderValueBox({
valueBox(paste(LifeIndex3(),"%"), "Life Index 3",
color = "yellow", icon("chart-line"))
})
#3-2 Filter Data
output$SalaryTable <- renderTable({
se %>% filter(input$Industry == se$Industry & input$Company == se$Company)
})
output$SalaryTable2 <- renderTable({
se %>% filter(input$Industry2 == se$Industry & input$Company2 == se$Company)
})
output$SalaryTable3 <- renderTable({
se %>% filter(input$Industry3 == se$Industry & input$Company3 == se$Company)
})
#3-3 Distribution & PR
Indust <- reactive({
if(input$choice == 1){
Ind <- input$Industry
} else if(input$choice == 2){
Ind <- input$Industry2
} else if(input$choice == 3){
Ind <- input$Industry3
}
})
IndSal <- reactive({
if(input$choice == 1){
Sal <- Sum()
} else if(input$choice == 2){
Sal2 <- Sum2()
} else if(input$choice == 3){
Sal3 <- Sum3()
}
})
output$densityind <- renderPlot({
req(IndSal())
subset1 <- subset(se$SalaryY, se$Industry == Indust())
abc <- density(subset1)
point <- (IndSal() / (input$WorkYear*10000))
plot(abc,
main = "Current Industry",
xlab = "Salary(in millions)",
ylab = "Density"
)
abline(v= point)
})
output$densityedu <- renderPlot({
req(IndSal())
subset1 <- subset(se$SalaryY, se$Education == input$Education)
abc <- density(subset1)
point <- (IndSal() / (input$WorkYear*10000))
plot(abc,
main = "Current Education Level",
xlab = "Salary(in millions)",
ylab = "Density"
)
abline(v= point)
})
IndPR <- reactive({
req(Indust())
est <- (IndSal() / (input$WorkYear*10000))
subset1 <- subset(se$SalaryY, se$Industry == Indust())
highersubset <- subset(se$SalaryY, se$Industry == Indust() & se$SalaryY>est)
PR <- (1 - (length(highersubset) / length(subset1)))*100
PR <- round(PR,1)
})
EduPR <- reactive({
req(input$Education)
est <- (IndSal() / (input$WorkYear*10000))
subset1 <- subset(se$SalaryY, se$Education == input$Education)
highersubset <- subset(se$SalaryY, se$Education == input$Education & se$SalaryY>est)
PR <- (1 - (length(highersubset) / length(subset1)))*100
PR <- round(PR,1)
})
output$PRInd <- renderText({
paste("#Your Estimated Salary is higher than ", "<font color=\"#FF0000\"><b>", IndPR(),"%", "</b></font>", "of people in the same industry.")
})
output$PREdu <- renderText({
paste("#Your Estimated Salary is higher than ", "<font color=\"#FF0000\"><b>", EduPR(),"%", "</b></font>", "of people with the same education level as you.")
})
###The 4th Tab
output$mpgPlot <- renderPlot({
par(mfrow=c(2,1), mar = c(5, 40, 2, 1))
boxplot(se$SalaryY~se$Industry,
col = "#74AADB", pch = 19, horizontal = T, las = 2, main = "Industry Comparison",
xlab = "Salary per year (10,000)")
boxplot(se$SalaryY~se$Education,
col = "#75AADB", pch = 19 , horizontal = T, las = 2, main = "Education Level Comparison",
xlab = "Salary per year (10,000)")}, height = 850, width = 1000)
###The 5th Tab
output$data <- renderTable({
se
})
}
se$Fatigue <- se$Fatigue %>% round() %>% as.factor()
se$Recommend <- se$Recommend %>% round() %>% as.factor()
se$GrowthHelp <- se$GrowthHelp %>% round() %>% as.factor()
se$CVHelp <- se$CVHelp %>% round() %>% as.factor()
edu <- sort(se$Education)
shinyUI(
dashboardPage(
dashboardHeader(title = "ShinyLife"),
dashboardSidebar(
sidebarMenu(
menuItem("Demission & Satisfaction", tabName = "dem", icon = icon("question")),
menuItem("Job & Personal Life-Value", icon = icon("chalkboard-teacher"), startExpanded = TRUE,
menuSubItem("Life-Value", tabName = "lv", icon = icon("chart-bar")),
menuSubItem("Data Sample", tabName = "data", icon = icon("align-left"))
),
menuItem("Comparision", icon = icon("balance-scale"),
menuSubItem("Company Comparision", tabName = "com", icon = icon("city")),
menuSubItem("Data Sample", tabName = "data2", icon = icon("align-left"))
),
menuItem("Salary Plot", tabName = "plot", icon = icon("table")),
menuItem("Raw Data", tabName = "alldata", icon = icon("database")),
numericInput("WorkYear", "Years you plan to work:",
value = 1, min = 1, max = 46)
)
),
dashboardBody(
tabItems(
tabItem(tabName = "dem",
h3("On my job, this is what I feel about..."),
fluidRow(
box(
selectInput("Q1", "1.	Being able to keep busy all the time",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q2", "2.	The chance to work alone on the job",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q3", "3.	The chance to do different things from time to time",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q4", "4.	The chance to be 'somebody' in the community",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q5", "5.	The way my boss handles his/her workers",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q6", "6.	The competence of my supervisor in making decisions",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q7", "7.	Being able to do things that don't go against my conscience",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q8", "8.	The way my job provides for steady employment",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px')
),
box(
selectInput("Q9", "9.	The chance to do things for other people",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q10", "10.	The chance to tell people what to do",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q11", "11.	The chance to do something that makes use of my abilities",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q12", "12.	The way company policies are put into practice",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q13", "13.	My pay and the amount of work I do",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q14", "14.	The chances for advancement on this job",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
selectInput("Q15", "15.	The freedom to use my own judgment",
c("Satisfied" = 1, "Dissatisfied" = 0), width = '420px'),
br(),
h5("#The questionnaire is adapted from the 'Manual for the Minnesota Satisfaction Questionnaire. Weiss, D. J., Dawis, R. V., & England, G. W. (1967).'")
)
)
),
tabItem(tabName = "lv",
h2("Job & Personal Life-Value"),
fluidRow(
box(
selectizeInput("aIndustry", "The industry you want to get in:", se$Industry),
selectizeInput("aCompany", "The company you want to get in:", se$Company),
selectInput("Education", "Your education level:", edu),
width = 3, height = 300),
box(
selectInput("Year", "Your current working experience: [years]",
c("0~1", "1~2", "2~3", "4~5", "5~7", "7~10", "10~15", "15~20", "20~30", "30+")),
selectInput("Hour", "The weekly working hours you can accept: [Hours/week]",
c("30-", "30~40", "40~45", "45~50", "50~55", "55~60", "60~70", "70~80",
"80~90", "90~100", "120+")),
sliderInput("Fatigue", "Your tolerance to fatigue at work:",
min = 1, max = 8, value = 5),
width = 3, height = 300),
box(
sliderInput("Recommend", "How important do you think the recommendations of
the current staff are:",
min = 1, max = 5, value = 3),
sliderInput("GrowthHelp", "The job's importance to your future career growth",
min = 1, max = 5, value = 3),
sliderInput("CVHelp","The job's importance to your resume:",
min = 1, max = 5, value = 3),
width = 6, height = 300)
),
fluidRow(
tabBox(
tabPanel("Salary Comparison",
plotOutput("aCompare"),
hr(),
h3(htmlOutput("aTotalSalary")),
h3(htmlOutput("aLifeIndex"))
),
tabPanel("Summary",
fluidRow(valueBoxOutput("TS", width = 10)),
fluidRow(valueBoxOutput("LI", width = 10)),
fluidRow(infoBoxOutput("bcom", width = 10)),
fluidRow(infoBoxOutput("bsal", width = 10))
)
),
tabBox(
side = "right",
tabPanel("Industry Distribution",
plotOutput("adensityind"), h4(htmlOutput("aPRInd"))
),
tabPanel("Education Lv. Distribution",
plotOutput("adensityedu"), h4(htmlOutput("aPREdu"))
)
)
)
),
tabItem(tabName = "data",
h3("Employee Salaries"),
tableOutput("aSalaryTable")
),
tabItem(tabName = "com",
h2("Companies Comparison"),
fluidRow(
box(title = "First Company", background = "blue",
selectizeInput("Industry", "The first industry:", se$Industry),
selectizeInput("Company", "The first company:", se$Company),
width = 4, height = 230),
box(title = "Second Company", background = "green",
selectizeInput("Industry2", "The second industry:", se$Industry),
selectizeInput("Company2", "The second company:", se$Company),
width = 4, height = 230),
box(title = "Third Company", background = "orange",
selectizeInput("Industry3", "The thrid industry:", se$Industry),
selectizeInput("Company3", "The thrid company:", se$Company),
width = 4, height = 230)
),
fluidRow(
column(width = 6, offset = 6,
radioButtons("choice", "",
c("First Company" = 1, "Second Company" = 2, "Third Company" = 3),
inline = TRUE)
)),
fluidRow(
tabBox(
tabPanel("Salary Comparison", plotOutput("Compare"),
hr(),
h3("Estimated Salary:"),
h4(htmlOutput("TotalSalary"), htmlOutput("TotalSalary2"), htmlOutput("TotalSalary3"))
),
tabPanel("Summary",
fluidRow(valueBoxOutput("TS1", width = 8), valueBoxOutput("LI1", width = 4)),
fluidRow(valueBoxOutput("TS2", width = 8), valueBoxOutput("LI2", width = 4)),
fluidRow(valueBoxOutput("TS3", width = 8), valueBoxOutput("LI3", width = 4))
)
),
tabBox(
side = "right",
tabPanel("Industry Distribution",
plotOutput("densityind"), h4(htmlOutput("PRInd"))
),
tabPanel("Education Lv. Distribution",
plotOutput("densityedu"), h4(htmlOutput("PREdu"))
)
)
)
),
tabItem(tabName = "data2",
h3("The first company"),
tableOutput("SalaryTable"),
hr(),
h3("The second company"),
tableOutput("SalaryTable2"),
hr(),
h3("The third company"),
tableOutput("SalaryTable3")
),
tabItem(tabName = "plot",
h4("SalaryPlot"),
fluidRow(column(width = 7, height = 850, align = "center", plotOutput("mpgPlot")))
),
tabItem(tabName = "alldata",
h4("RawData"),
tableOutput("data")
)
)
)
)
se <- knnImputation(se)
se <- knnImputation(se)
View(se)
se["Industry"]
se[c("Industry", "Company", "Education")] %>% as.factor()
se <- knnImputation(se)
se[c("Industry", "Company", "Education")]
se[c("Industry", "Company", "Education")%>% as.factor()]
se <- se[c("Industry", "Company", "Education") %>% as.factor()]
se <- knnImputation(se)
se <- knnImputation(se)
se <- read.csv(url("https://drive.google.com/uc?export=download&id=1h5GKPHtblt0jHmtasvcxVJL5m04-ajBm"))
View(se)
se %>% summary()
se <- se[c("Industry", "Company", "Education") %>% as.factor()]
se %>% summary()
se <- read.csv(url("https://drive.google.com/uc?export=download&id=1h5GKPHtblt0jHmtasvcxVJL5m04-ajBm"))
se %>% summary()
se <- knnImputation(se)
library(shiny)
library(shinydashboard)
library(dplyr)
library(readr)
require(DMwR)
se <- read.csv(url("https://drive.google.com/uc?export=download&id=1h5GKPHtblt0jHmtasvcxVJL5m04-ajBm"))
se %>% summary()
se <- knnImputation(se)
library(shiny)
library(shinydashboard)
library(dplyr)
library(readr)
require(DMwR)
se <- read.csv(url("https://drive.google.com/uc?export=download&id=1h5GKPHtblt0jHmtasvcxVJL5m04-ajBm"))
se <- knnImputation(se)
se$Fatigue <- se$Fatigue %>% round() %>% as.factor()
se$Recommend <- se$Recommend %>% round() %>% as.factor()
se$GrowthHelp <- se$GrowthHelp %>% round() %>% as.factor()
se$CVHelp <- se$CVHelp %>% round() %>% as.factor()
se[.("SalaryY", "Fatigue", "Recommend", "GrowthHelp", "CVHelp", "Education", "SalaryM", "AvgYear", "StartingSalary", "GrowthRate") %>% knnImputation()]
se[,.("SalaryY", "Fatigue", "Recommend", "GrowthHelp", "CVHelp", "Education", "SalaryM", "AvgYear", "StartingSalary", "GrowthRate") %>% knnImputation()]
se[c("SalaryY", "Fatigue", "Recommend", "GrowthHelp", "CVHelp", "Education", "SalaryM", "AvgYear", "StartingSalary", "GrowthRate") %>% knnImputation()]
